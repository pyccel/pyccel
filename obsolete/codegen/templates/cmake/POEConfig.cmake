
FIND_PROGRAM(POE_EXECUTABLE
  NAMES poe
  DOC "IBM tool to launch parallel jobs.")

IF (POE_EXECUTABLE)
  SET (POE_FOUND "YES")
ENDIF (POE_EXECUTABLE)

MARK_AS_ADVANCED( POE_FOUND POE_EXECUTABLE)

IF(POE_FOUND)

   MACRO(HOSTLIST_CREATE)
      SET(HOSTLIST "${CMAKE_CURRENT_BINARY_DIR}/host.list")
      SET(NPROCS 16)
      WHILE(NPROCS GREATER 0)
        FILE(APPEND ${HOSTLIST} "localhost\n")
        MATH(EXPR NPROCS "${NPROCS} - 1" ) 
      ENDWHILE( NPROCS GREATER 0)
   ENDMACRO(HOSTLIST_CREATE)

   HOSTLIST_CREATE()
   SET(MPIEXEC ${POE_EXECUTABLE}) 
   SET(MPIEXEC_NUMPROC_FLAG "-procs") 
   MACRO(ADD_MPI_TEST TEST_NAME EXEC_NAME PROCS ARGS)
      ADD_TEST(NAME ${TEST_NAME}
               COMMAND ${MPIEXEC} 
                       ${MPIEXEC_PREFLAGS}
	               ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${EXEC_NAME}
	               ${MPIEXEC_POSTFLAGS} ${ARGS}
                       ${MPIEXEC_NUMPROC_FLAG} ${PROCS})
   ENDMACRO(ADD_MPI_TEST)

ELSE(POE_FOUND)

   MACRO(ADD_MPI_TEST TEST_NAME EXEC_NAME PROCS ARGS)
      IF(NOT APPLE)
         STRING(REGEX REPLACE "mpiexec" "mpirun" MPIEXEC ${MPIEXEC})
      ENDIF()
      ADD_TEST(NAME ${TEST_NAME}
               COMMAND ${MPIEXEC} 
	               ${MPIEXEC_NUMPROC_FLAG} ${PROCS} ${MPIEXEC_PREFLAGS}
	               ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${EXEC_NAME}
	               ${MPIEXEC_POSTFLAGS} ${ARGS})
   ENDMACRO(ADD_MPI_TEST)

ENDIF(POE_FOUND)


