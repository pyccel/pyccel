# After changing this file, check it on:
#   http://lint.travis-ci.org/

# to test different versions of python, check the numpy travis file on:
#   https://github.com/numpy/numpy/blob/master/.travis.yml

sudo: required
language: python

# Existing Python versions
python:
  - "3.5"
  - "3.6"

# Enable 3.7 without globally enabling 'dist: xenial' for other build jobs
matrix:
  include:
    - python: 3.7
      dist: xenial

# command before installation
before_install:
  - sudo apt-get install gfortran
  - sudo apt-get install libblas-dev liblapack-dev
#  - sudo apt-get install libcr-dev mpich2
#  - sudo apt-get install mpich libmpich-dev # libhdf5-mpich-dev
  - sudo apt-get install libopenmpi-dev openmpi-bin # libhdf5-openmpi-dev

# command to install Python library and dependencies
install:
  - pip install .

before_script:
  - mkdir __pytest__

# command to run tests
script:
  - cd __pytest__
  - INSTALL_DIR=$(python -c "import pyccel; print(pyccel.__path__[0])")
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/preprocess/test_preprocess.py
  - coverage combine
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/parser/test_headers.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/parser/test_openmp.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/parser/test_openacc.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/syntax/test_syntax.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/errors/test_errors.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/warnings/test_warnings.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/semantic/test_semantic.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/codegen/test_codegen.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/complexity/test_complexity.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/epyccel -v -m "not parallel"
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} -m pytest ../tests/pyccel/test_pyccel.py -v
  - coverage combine -a
  - mpirun -n 4 coverage run -p -m pytest ../tests/epyccel/test_epyccel_mpi_modules.py -v -m parallel
  - coverage combine -a
#  - mpirun -n 4 python -m pytest ../tests/epyccel -v -m parallel
#  - coverage combine -a
# this test must be executed with python, since we are calling mpif90 inside it
  - coverage run -p --source=${INSTALL_DIR} ../tests/internal/test_internal.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} ../tests/external/test_external.py
  - coverage combine -a
  - coverage run -p --source=${INSTALL_DIR} ../tests/macro/test_macro.py
  - coverage combine -a
#  - coverage run -p --source=${INSTALL_DIR} ../tests/test_pyccel.py --execute
#  - coverage combine -a
#  - coverage run -p --source=${INSTALL_DIR} ../tests/test_pyccel_openmp.py --openmp --execute
#  - coverage combine -a
#  - coverage run -p --source=${INSTALL_DIR} ../tests/test_pyccel_lapack.py --libs='blas lapack' --execute
#  - coverage combine -a
#  - coverage run -p --source=${INSTALL_DIR} ../tests/test_pyccel_mpi.py --compiler=mpif90
#  - coverage combine -a
  - echo "[run]
parallel = True
[report]
include = ${INSTALL_DIR}/*" > .coveragerc
  - coverage report -m > cov_out.txt 2> cov_err.txt
  - python ../checkCoverage.py 80
  - cd -

after_script:
  - rm -rf __pytest__
