name: 'Windows installation commands'

runs:
  using: "composite"
  steps:
    - name: Fix 'Unknown MS Compiler version 1900' problem
      run: |
        # Use utf for output
        $PSDefaultParameterValues['Out-File:Encoding'] = 'Ascii'
        #
        # Change default C compiler from M$ to mingw in distutils.cfg
        echo "[build]`ncompiler = mingw32" >> ${Env:pythonLocation}\\Lib\\distutils\\distutils.cfg
        sed '/return \[''msvcr100''\]/ a \        elif msc_ver == ''1900'':\\n            return [''msvcr140'']' ${Env:pythonLocation}\\Lib\\distutils\\cygwinccompiler.py > sed_tmp.py
        Move-Item -Path sed_tmp.py -Destination ${Env:pythonLocation}\\Lib\\distutils\\cygwinccompiler.py -Force
      shell: powershell
    - name: Install Lapack
      run: |
        #
        # Download x64 BLAS and LAPACK DLLs from https://icl.cs.utk.edu/lapack-for-windows/lapack/
        $WEB_ADDRESS="https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64"
        $LIBRARY_DIR="C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\lib"
        curl $WEB_ADDRESS/libblas.dll -o $LIBRARY_DIR\\libblas.dll
        curl $WEB_ADDRESS/liblapack.dll -o $LIBRARY_DIR\\liblapack.dll
        #
        # Microsoft C runtime library: generate static libmsvcr140.a from vcruntime140.dll
        cd $LIBRARY_DIR
        cp $Env:SystemRoot\\SysWOW64\\vcruntime140.dll .
        gendef vcruntime140.dll
        dlltool -d vcruntime140.def -l libmsvcr140.a -D vcruntime140.dll
      shell: powershell
    - name: Install MS MPI runtime and SDK
      run: |
        #
        # Download MS MPI runtime and SDK
        curl https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe -o msmpisetup.exe
        curl https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisdk.msi -o msmpisdk.msi
        #
        # Install MS MPI
        ./msmpisetup.exe -unattend
        sleep 5
        msiexec /quiet /i msmpisdk.msi
      shell: powershell
    #- name: Setup MPI
    #  run: |
    #    #refreshenv
    #    $MSMPI_INC="C:\\Program Files (x86)\\Microsoft SDKs\\Include\\"
    #    $MSMPI_LIB64="C:\\Program Files (x86)\\Microsoft SDKs\\Lib\\x64\\"
    #    $PATH="${Env:Path}C:\\Program Files\\Microsoft MPI\\Bin;"
    #    [System.Environment]::SetEnvironmentVariable("Path",$PATH)
    #    echo "Path=${PATH}" >> $GITHUB_ENV
    #    Get-Childitem -Path "C:\\Program Files" -Recurse -ErrorAction SilentlyContinue -Include mpi.f90
    #    Get-Childitem -Path "C:\\Program Files (x86)" -Recurse -ErrorAction SilentlyContinue -Include mpi.f90
    #    #
    #    # Generate mpi.mod for gfortran according to https://abhilashreddy.com/writing/3/mpi_instructions.html
    #    pushd "$MSMPI_INC"
    #    sed -i 's/mpifptr.h/x64\/mpifptr.h/g' mpi.f90
    #    sed -i 's/mpifptr.h/x64\/mpifptr.h/g' mpif.h
    #    gfortran -c -D_WIN64 -D INT_PTR_KIND\(\)=8 -fno-range-check mpi.f90
    #    popd
    #    #
    #    # Generate static libmsmpi.a from msmpi.dll
    #    pushd "$MSMPI_LIB64"
    #    cp $SYSTEMROOT\\SysWOW64\\msmpi.dll .
    #    gendef msmpi.dll
    #    dlltool -d msmpi.def -l libmsmpi.a -D msmpi.dll
    #    popd
    #  shell: powershell
