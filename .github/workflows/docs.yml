name: Doc Coverage Action

on:
  workflow_dispatch:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: false
        type: string
      base:
        required: true
        type: string
      check_run_id:
        required: false
        type: string
      pr_repo:
        required: false
        type: string

env:
  COMMIT: ${{ inputs.ref || github.event.ref }}
  PEM: ${{ secrets.BOT_PEM }}
  GITHUB_RUN_ID: ${{ github.run_id }}
  GITHUB_CHECK_RUN_ID: ${{ inputs.check_run_id }}
  PR_REPO: ${{ inputs.pr_repo || github.repository }}

jobs:

  DocumentationChecker:

    runs-on: ubuntu-latest
    name: Documentation Format

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.base }}
          path: base
      - uses: actions/checkout@v3
        with:
          path: compare
          ref: ${{ env.COMMIT }}
          repository: ${{ env.PR_REPO }}
          fetch-depth: 0
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
      - name: "Setup"
        id: token
        run: |
          pip install jwt requests
          cd compare
          python ../base/ci_tools/setup_check_run.py
          cd ..
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install docstr-coverage
          python -m pip install numpydoc
        shell: bash
      - name: Setup imports
        run: |
          echo "PYTHONPATH=$(pwd)/compare" >> $GITHUB_ENV
          cd compare
          pip3 install .
          cd ..
        shell: bash
      - name: Check doc coverage
        id: doc_coverage
        run: |
          echo "${{ github.event.pull_request.base.sha }}"
          docstr-coverage --skip-magic --skip-init --fail-under=0 --docstr-ignore-file=base/.docstr_coverage base/pyccel base/ci_tools 2>&1 | tee base_cov
          docstr-coverage --skip-magic --skip-init --fail-under=0 --docstr-ignore-file=compare/.docstr_coverage compare/pyccel compare/ci_tools 2>&1 | tee compare_cov
          export PYTHONPATH=compare
          python compare/ci_tools/summarise_doccoverage.py compare_cov base_cov $GITHUB_STEP_SUMMARY
        shell: bash
      - name: Check doc format
        id: doc_format
        run: |
          cd compare
          git fetch
          git diff ${{ inputs.base }}..HEAD --no-indent-heuristic --unified=0 --output=pull_diff.txt --no-color
          python ../base/ci_tools/list_docs_tovalidate.py pull_diff.txt objects.txt ci_objects.txt
          touch report.txt
          while read line; do
            python -m numpydoc --validate $line >> report.txt 2>&1 || true 
          done < objects.txt
          cd ci_tools
          while read line; do
            python -m numpydoc --validate $line >> ../report.txt 2>&1 || true 
          done < ../ci_objects.txt
          cd ..
          cat report.txt
          cd ..
          python compare/ci_tools/process_results.py compare/report.txt $GITHUB_STEP_SUMMARY
        shell: bash
      - name: "Post completed"
        if: always()
        run:
          python base/ci_tools/complete_check_run.py ${{ steps.doc_coverage.outcome }} ${{ steps.doc_format.outcome }}
