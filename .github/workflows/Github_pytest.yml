name: Pyccel tests

on:
  pull_request:
    branches: [ master ]

jobs:
  Linux:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Coverage install
        uses: ./.github/actions/coverage_install
      - name: Fortran/C tests with pytest
        uses: ./.github/actions/pytest_run
      - name: Python tests with pytest
        uses: ./.github/actions/pytest_run_python
      - name: Parallel tests with pytest
        uses: ./.github/actions/pytest_parallel
      - name: Test with valgrind for memory leaks
        uses: ./.github/actions/valgrind_run
      - name: Collect coverage information
        continue-on-error: True
        uses: ./.github/actions/coverage_collection
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        continue-on-error: True
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml

  Windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.7
        uses: actions/setup-python@v2
        with:
            # The second most recent version is used as
            # setup-python installs the most recent patch
            # which leads to linking problems as there are
            # 2 versions of python3X.a and the wrong one
            # is chosen
            python-version: 3.7
      - name: Install dependencies
        uses: ./.github/actions/windows_install
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation

      # This is split into many tests as the test raising an error must be the last line in a multi-line powershell command
      - name: Serial C tests run in parallel
        run: |
          python -m pytest -n auto -rx -m "not (parallel or xdist_incompatible) and c" --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: Serial C tests run in serial
        run: |
          pyccel-clean
          python -m pytest -rx -m "xdist_incompatible and not parallel and c" --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: Serial fortran tests and non-tagged tests run in parallel
        run: |
          python -m pytest -n auto -rx -m "not (parallel or xdist_incompatible) and not (c or python)" --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: Serial fortran tests and non-tagged tests run in serial
        run: |
          pyccel-clean
          python -m pytest -rx -m "xdist_incompatible and not parallel and not (c or python)" --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: Serial Python tests run in parallel
        run: |
          python -m pytest -n auto -rx -m "not (parallel or xdist_incompatible) and python" --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      # Remove this action if uncommenting the next action
      - name: Serial Python tests cleanup
        run: |
          pyccel-clean
        working-directory: ./tests
      # Uncomment this test to activate python xdist_incompatible tests (pytest tests raises exit code 5 when it finds no tests)
      #- name: Serial Python tests run in serial
      #- run: |
      #-   pyccel-clean
      #-   python -m pytest -rx -m "xdist_incompatible and not parallel and python" --ignore=symbolic --ignore=ndarrays
      #- working-directory: ./tests
      - name: ND-Array tests
        run: |
          python -m pytest ndarrays/ -rx
        working-directory: ./tests
      - name: ND-Array tests cleanup
        run: |
          pyccel-clean
        working-directory: ./tests/ndarrays
      - name: Parallel tests
        run: |
          mpiexec -n 4 python -m pytest epyccel/test_parallel_epyccel.py -v -m parallel -rx
          # mpiexec -n 4 python -m pytest epyccel -v -m parallel -rx
        working-directory: ./tests

  MacOSX:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        uses: ./.github/actions/macos_install
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Fortran/C tests with pytest
        uses: ./.github/actions/pytest_run
      - name: Python tests with pytest
        uses: ./.github/actions/pytest_run_python
      - name: Parallel tests with pytest
        uses: ./.github/actions/pytest_parallel
