# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pyccel tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  #Linux:

  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python 3.5
  #      uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.5
  #    - name: Install dependencies
  #      uses: ./.github/actions/linux_install
  #    - name: Install python dependencies
  #      uses: ./.github/actions/pip_installation
  #    - name: Coverage install
  #      uses: ./.github/actions/coverage_install
  #    - name: Test with pytest
  #      uses: ./.github/actions/pytest_run
  #    - name: Collect coverage information
  #      continue-on-error: True
  #      uses: ./.github/actions/coverage_collection
  #    - name: Run codacy-coverage-reporter
  #      uses: codacy/codacy-coverage-reporter-action@master
  #      continue-on-error: True
  #      with:
  #        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #        coverage-reports: cobertura.xml

  #Linux-Master:

  #  runs-on: ubuntu-latest
  #  if: github.ref == 'refs/heads/master'
  #  strategy:
  #    matrix:
  #      python-version: [3.6, 3.7, 3.8]

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python 3.5
  #      uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.5
  #    - name: Install dependencies
  #      uses: ./.github/actions/linux_install
  #    - name: Install python dependencies
  #      uses: ./.github/actions/pip_installation
  #    - name: Coverage install
  #      uses: ./.github/actions/coverage_install
  #    - name: Test with pytest
  #      uses: ./.github/actions/pytest_run
  #    - name: Collect coverage information
  #      continue-on-error: True
  #      uses: ./.github/actions/coverage_collection
  #    - name: Run codacy-coverage-reporter
  #      uses: codacy/codacy-coverage-reporter-action@master
  #      continue-on-error: True
  #      with:
  #        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #        coverage-reports: cobertura.xml

  Windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Look for conda
        run: |
            ls ${Env:CONDA}
        shell: powershell
      - name: Try to setup conda
        run: |
            ${Env:CONDA}\condabin\conda activate
        shell: powershell
      #- name: Setup conda with default python version
      #  uses: s-weigand/setup-conda@v1
      - name: Install dependencies
        uses: ./.github/actions/windows_install
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Serial C tests
        run: |
          python -m pytest -rx -m "not parallel and c" --ignore=ast --ignore=printers --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: Serial fortran tests and non-tagged tests
        run: |
          python -m pytest -rx -m "not parallel and not c" --ignore=ast --ignore=printers --ignore=symbolic --ignore=ndarrays
        working-directory: ./tests
      - name: ND-Array tests
        run: |
          python -m pytest ndarrays/ -rx
        working-directory: ./tests
      #- name: Parallel tests
      #  run: |
      #    mpiexec -n 4 python -m pytest epyccel/test_parallel_epyccel.py -v -m parallel -rx
      #    mpiexec -n 4 python -m pytest epyccel -v -m parallel -rx
      #  working-directory: ./tests

  #MacOSX:

  #  runs-on: macos-latest

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python 3.8
  #      uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.8
  #    - name: Install dependencies
  #      uses: ./.github/actions/macos_install
  #    - name: Install python dependencies
  #      uses: ./.github/actions/pip_installation
  #    - name: Test with pytest
  #      uses: ./.github/actions/pytest_run
