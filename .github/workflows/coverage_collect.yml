name: Unit test coverage collection

on:
  workflow_call:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: false
        type: string
      cuda_result:
        required: true
        type: string

jobs:
  CoverageChecker:

    runs-on: ubuntu-latest
    name: Unit tests

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install coverage
        run: |
            python -m pip install --upgrade pip
            python -m pip install coverage
        shell: bash
      - name: Collect coverage information
        uses: actions/download-artifact@v3
        with:
          name: coverage-artifact
      - name: Rename coverage file
        run: mv .coverage .coverage.linux
      - name: Collect coverage information
        uses: actions/download-artifact@v3
        if: ${{ inputs.cuda_result }} == 'success'
        with:
          name: cuda-coverage-artifact
      - name: Rename coverage file
        if: ${{ inputs.cuda_result }} == 'success'
        run: mv .coverage .coverage.cuda
      - name: Generate coverage report
        run: |
            echo -e "[paths]\nsource =\n   $(pwd)/pyccel\n   */site-packages/pyccel\n[xml]\noutput = cobertura.xml" > .coveragerc
            coverage combine
            coverage xml
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        continue-on-error: True
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml
      - name: Save code coverage xml report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-artifact-xml
          path: cobertura.xml
          retention-days: 1
