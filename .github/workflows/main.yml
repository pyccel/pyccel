# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pyccel tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run:
        sudo apt-get install gfortran
        sudo apt-get install libblas-dev liblapack-dev
        sudo apt-get install libopenmpi-dev openmpi-bin
        sudo apt-get install libomp-dev
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install scipy
        python -m pip install mpi4py
        python -m pip install tblib
        python -m pip install "pytest>=4.5"
    - name: Coverage setup
      run: |
        python -m pip install coverage
        sudo apt-get install default-jre
        INSTALL_DIR=$(cd tests; python -c "import pyccel; print(pyccel.__path__[0])")
        SITE_DIR=$(python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')
        echo -e "import coverage; coverage.process_startup()" > ${SITE_DIR}/pyccel_cov.pth
        echo -e "[run]\nparallel = True\nsource = ${INSTALL_DIR}\ndata_file = $(pwd)/.coverage\n[report]\ninclude = ${INSTALL_DIR}/*\n[xml]\noutput = cobertura.xml" > .coveragerc
        export COVERAGE_PROCESS_START=$(pwd)/.coveragerc
    - name: Test with pytest
      run: |
        cd tests
        python -m pytest -rx -m "not parallel and c" --ignore=ast --ignore=printers --ignore=symbolic --ignore=ndarrays
        python -m pytest -rx -m "not parallel and not c" --ignore=ast --ignore=printers --ignore=symbolic --ignore=ndarrays
        python -m pytest ndarrays/ -rx
        mpiexec -n 4 ${MPI_OPTS} python -m pytest epyccel/test_parallel_epyccel.py -v -m parallel -rx
        #mpiexec -n 4 ${MPI_OPTS} python -m pytest epyccel -v -m parallel -rx
        cd ..
    - name: Collect coverage information
      run: |
        coverage combine
        coverage xml
        rm ${SITE_DIR}/pyccel_cov.pth
        bash <(wget -q -O - https://coverage.codacy.com/get.sh)

