name: Python Linting

on:
  workflow_dispatch:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: false
        type: string
      base:
        required: true
        type: string
      check_run_id:
        required: false
        type: string
      pr_repo:
        required: false
        type: string

env:
  COMMIT: ${{ inputs.ref || github.event.ref }}
  PEM: ${{ secrets.BOT_PEM }}
  GITHUB_RUN_ID: ${{ github.run_id }}
  GITHUB_CHECK_RUN_ID: ${{ inputs.check_run_id }}
  PR_REPO: ${{ inputs.pr_repo || github.repository }}

jobs:
  Linter:
    runs-on: ubuntu-latest
    name: Python best practices

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.base }}
          path: base
      - uses: actions/checkout@v3
        with:
          path: compare
          ref: ${{ env.COMMIT }}
          repository: ${{ env.PR_REPO }}
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
      - name: "Setup"
        id: token
        run: |
          pip install jwt requests
          python base/ci_tools/setup_check_run.py pylint
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint
        shell: bash
      - name: Reference Pylint
        run: |
          check_files=$(git diff ${{ inputs.ref }}..HEAD --name-only --diff-filter=DM | grep "\.py$")
          python -m pylint --rcfile=.pylintrc ${check_files} 2>&1 | tee pylint_results.txt || true
        working-directory: base
        shell: bash
      - name: New Pylint
        run: |
          check_files=$(git diff ${{ inputs.base }}..HEAD --name-only --diff-filter=AM | grep "\.py$")
          python -m pylint --rcfile=.pylintrc ${check_files} 2>&1 | tee pylint_results.txt || true
        working-directory: compare
        shell: bash
      - name: Pylint
        id: pylint
        run: |
          cd compare
          git diff ${{ inputs.base }}..HEAD --no-indent-heuristic --unified=0 --output=pull_diff.txt --no-color
          python ci_tools/parse_pylint_output.py ../base/pylint_results.txt pylint_results.txt pull_diff.txt $GITHUB_STEP_SUMMARY
        shell: bash
      - name: "Post completed"
        if: always()
        run:
          python base/ci_tools/complete_check_run.py ${{ steps.pylint.outcome }}
