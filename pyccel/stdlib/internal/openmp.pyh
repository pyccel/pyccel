# pyccel header for OpenMP.
# OpenMP directives and Constructs are handled by the parser (see openmp.tx) and are parts of the Pyccel language.
# We only list here what can not be described in the openmp grammar.

#$ header metavar module_name = 'omp_lib'
#$ header metavar module_version = '4.5'
#$ header metavar save=True
#$ header metavar no_target=True
#$ header metavar external=False

# ............................................................
#            Runtime Library Routines for Fortran
# ............................................................

#$ header function omp_set_num_threads(int32)
#$ header function omp_get_num_threads() results(int32)

#$ header function omp_get_max_threads() results(int32)
#$ header function omp_get_thread_num() results(int32)
#$ header function omp_get_num_procs() results(int32)
#$ header function omp_in_parallel() results(bool)

#$ header function omp_set_dynamic(bool)
#$ header function omp_get_dynamic()     results(bool)

#$ header function omp_get_cancellation() results(bool)

#$ header function omp_set_nested(bool)
#$ header function omp_get_nested() results(bool)

#$ header function omp_set_schedule(int32, int32)
#$ header function omp_get_schedule() results(int32, int32)

#$ header function omp_get_thread_limit() results(int32)
#$ header function omp_set_max_active_levels(int32)
#$ header function omp_get_max_active_levels() results(int32)
#$ header function omp_get_level() results(int32)

#$ header function omp_get_ancestor_thread_num(int32) results(int32)

#$ header function omp_get_team_size(int32) results(int32) 
#$ header function omp_get_active_level() results(int32) 
#$ header function omp_in_final() results(bool)
#$ header function omp_get_proc_bind() results(int32) 

#$ header function omp_get_num_places() results(int32) 
#$ header function omp_get_place_num_procs(int32)  results(int32) 
#$ header function omp_get_place_proc_ids(int32, int32 [:])
#$ header function omp_get_place_num() results(int32) 
#$ header function omp_get_partition_num_places() results(int32) 
#$ header function omp_get_partition_place_nums(int32 [:])

#$ header function omp_set_default_device(int32)
#$ header function omp_get_default_device() results(int32)

#$ header function omp_get_num_devices() results(int32) 

#$ header function omp_get_num_teams() results(int32) 
#$ header function omp_get_team_num() results(int32) 

#$ header function omp_is_initial_device() results(bool) 
#$ header function omp_get_initial_device() results(int32) 

#$ header function omp_get_max_task_priority() results(int32) 

# ............................................................
