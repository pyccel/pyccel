from numpy import int32, float32, float64



def sgesv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgesv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgesvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32', anon_8 : 'float32', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float32[:,:](order=F)', anon_16 : 'int32', anon_17 : 'float32[:]', anon_18 : 'int32', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def dgesvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64', anon_8 : 'float64', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float64[:,:](order=F)', anon_16 : 'int32', anon_17 : 'float64[:]', anon_18 : 'int32', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def sgbsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def dgbsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def sgbsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32[:]', anon_11 : 'str', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:,:](order=F)') -> None:
    ...

def dgbsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32[:]', anon_11 : 'str', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:,:](order=F)') -> None:
    ...

def sgtsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgtsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgtsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'int32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32', anon_17 : 'float32[:]', anon_18 : 'float32[:]', anon_19 : 'float32[:]', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def dgtsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'int32[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64', anon_17 : 'float64[:]', anon_18 : 'float64[:]', anon_19 : 'float64[:]', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def sposv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dposv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sposvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'str', anon_9 : 'float32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32', anon_15 : 'float32[:]', anon_16 : 'float32[:]', anon_17 : 'float32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def dposvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'str', anon_9 : 'float64[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64', anon_15 : 'float64[:]', anon_16 : 'float64[:]', anon_17 : 'float64[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def sppsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def dppsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def sppsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'str', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dppsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'str', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def spbsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dpbsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def spbsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'str', anon_10 : 'float32[:]', anon_11 : 'float32[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float32', anon_16 : 'float32[:]', anon_17 : 'float32[:]', anon_18 : 'float32[:]', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def dpbsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'str', anon_10 : 'float64[:]', anon_11 : 'float64[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float64', anon_16 : 'float64[:]', anon_17 : 'float64[:]', anon_18 : 'float64[:]', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def sptsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def dptsv(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def sptsvx(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32') -> None:
    ...

def dptsvx(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32') -> None:
    ...

def ssysv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dsysv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def ssysvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dsysvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def sspsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'int32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dspsv(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'int32[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sspsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'float32[:]', anon_16 : 'int32') -> None:
    ...

def dspsvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'float64[:]', anon_16 : 'int32') -> None:
    ...

def sgels(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dgels(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sgelsy(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float32', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dgelsy(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float64', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sgelss(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dgelss(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sgelsd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32') -> None:
    ...

def dgelsd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32') -> None:
    ...

def sgglse(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dgglse(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sggglm(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dggglm(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def ssyev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dsyev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def ssyevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dsyevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def ssyevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32', anon_7 : 'float32', anon_8 : 'int32', anon_9 : 'int32', anon_10 : 'float32', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float32[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def dsyevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64', anon_7 : 'float64', anon_8 : 'int32', anon_9 : 'int32', anon_10 : 'float64', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float64[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def ssyevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32', anon_7 : 'float32', anon_8 : 'int32', anon_9 : 'int32', anon_10 : 'float32', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'int32[:]', anon_16 : 'float32[:]', anon_17 : 'int32', anon_18 : 'int32[:]', anon_19 : 'int32', anon_20 : 'int32') -> None:
    ...

def dsyevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64', anon_7 : 'float64', anon_8 : 'int32', anon_9 : 'int32', anon_10 : 'float64', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'int32[:]', anon_16 : 'float64[:]', anon_17 : 'int32', anon_18 : 'int32[:]', anon_19 : 'int32', anon_20 : 'int32') -> None:
    ...

def sspev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'int32') -> None:
    ...

def dspev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'int32') -> None:
    ...

def sspevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'int32', anon_9 : 'int32[:]', anon_10 : 'int32', anon_11 : 'int32') -> None:
    ...

def dspevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'int32', anon_9 : 'int32[:]', anon_10 : 'int32', anon_11 : 'int32') -> None:
    ...

def sspevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dspevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def ssbev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32') -> None:
    ...

def dsbev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32') -> None:
    ...

def ssbevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dsbevd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def ssbevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'float32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float32', anon_14 : 'int32', anon_15 : 'float32[:]', anon_16 : 'float32[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float32[:]', anon_19 : 'int32[:]', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def dsbevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'float64', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float64', anon_14 : 'int32', anon_15 : 'float64[:]', anon_16 : 'float64[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float64[:]', anon_19 : 'int32[:]', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def sstrev(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dstrev(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def sstrevd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dstrevd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sstrevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dstrevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def sstrevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float32[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def dstrevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float64[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def sgeev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dgeev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sgeevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float32[:]', anon_14 : 'float32', anon_15 : 'float32[:]', anon_16 : 'float32[:]', anon_17 : 'float32[:]', anon_18 : 'int32', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def dgeevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float64[:]', anon_14 : 'float64', anon_15 : 'float64[:]', anon_16 : 'float64[:]', anon_17 : 'float64[:]', anon_18 : 'int32', anon_19 : 'int32[:]', anon_20 : 'int32') -> None:
    ...

def sgesvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dgesvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sgesdd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def dgesdd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def sstev(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dstev(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def sstevd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dstevd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sstevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dstevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def sstevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float32[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def dstevr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float64[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def ssytrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def dsytrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def ssptrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32') -> None:
    ...

def dsptrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32') -> None:
    ...

def ssbtrd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32') -> None:
    ...

def dsbtrd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32') -> None:
    ...

def sorgtr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dorgtr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sormtr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dormtr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sopgtr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dopgtr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def sopmtr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32') -> None:
    ...

def dopmtr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32') -> None:
    ...

def ssteqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dsteqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def ssterf(anon_0 : 'int32', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'int32') -> None:
    ...

def dsterf(anon_0 : 'int32', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'int32') -> None:
    ...

def sstedc(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dstedc(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sstegr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float32[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def dstegr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'int32', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'float64[:]', anon_16 : 'int32', anon_17 : 'int32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def sstebz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32', anon_4 : 'float32', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'float32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'int32[:]', anon_14 : 'int32[:]', anon_15 : 'float32[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dstebz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64', anon_4 : 'float64', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'float64', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'int32[:]', anon_14 : 'int32[:]', anon_15 : 'float64[:]', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def sstein(anon_0 : 'int32', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32[:]', anon_11 : 'int32[:]', anon_12 : 'int32') -> None:
    ...

def dstein(anon_0 : 'int32', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32[:]', anon_11 : 'int32[:]', anon_12 : 'int32') -> None:
    ...

def spteqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dpteqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def dsygv(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32') -> None:
    ...

def ssygv(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32') -> None:
    ...

def dsygvd(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def ssygvd(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dsygvx(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64', anon_10 : 'float64', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float64', anon_14 : 'int32', anon_15 : 'float64[:]', anon_16 : 'float64[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float64[:]', anon_19 : 'int32', anon_20 : 'int32[:]', anon_21 : 'int32[:]', anon_22 : 'int32') -> None:
    ...

def ssygvx(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32', anon_10 : 'float32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float32', anon_14 : 'int32', anon_15 : 'float32[:]', anon_16 : 'float32[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float32[:]', anon_19 : 'int32', anon_20 : 'int32[:]', anon_21 : 'int32[:]', anon_22 : 'int32') -> None:
    ...

def dspgv(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32') -> None:
    ...

def sspgv(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32') -> None:
    ...

def dspgvd(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sspgvd(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'int32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dspgvx(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64', anon_8 : 'float64', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'int32', anon_13 : 'float64[:]', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64[:]', anon_17 : 'int32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def sspgvx(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32', anon_8 : 'float32', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'int32', anon_13 : 'float32[:]', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32[:]', anon_17 : 'int32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def dsbgv(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'int32') -> None:
    ...

def ssbgv(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'int32') -> None:
    ...

def dsbgvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'int32', anon_16 : 'int32') -> None:
    ...

def ssbgvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'int32', anon_14 : 'int32[:]', anon_15 : 'int32', anon_16 : 'int32') -> None:
    ...

def dsbgvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64', anon_13 : 'float64', anon_14 : 'int32', anon_15 : 'int32', anon_16 : 'float64', anon_17 : 'int32', anon_18 : 'float64[:]', anon_19 : 'float64[:,:](order=F)', anon_20 : 'int32', anon_21 : 'float64[:]', anon_22 : 'int32[:]', anon_23 : 'int32[:]', anon_24 : 'int32') -> None:
    ...

def ssbgvx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32', anon_13 : 'float32', anon_14 : 'int32', anon_15 : 'int32', anon_16 : 'float32', anon_17 : 'int32', anon_18 : 'float32[:]', anon_19 : 'float32[:,:](order=F)', anon_20 : 'int32', anon_21 : 'float32[:]', anon_22 : 'int32[:]', anon_23 : 'int32[:]', anon_24 : 'int32') -> None:
    ...

def dggev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'int32', anon_16 : 'int32') -> None:
    ...

def sggev(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'int32', anon_16 : 'int32') -> None:
    ...

def dggevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'int32', anon_17 : 'int32', anon_18 : 'float64[:]', anon_19 : 'float64[:]', anon_20 : 'float64', anon_21 : 'float64', anon_22 : 'float64[:]', anon_23 : 'float64[:]', anon_24 : 'float64[:]', anon_25 : 'int32', anon_26 : 'int32[:]', anon_27 : 'bool[:]', anon_28 : 'int32') -> None:
    ...

def sggevx(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'str', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'int32', anon_17 : 'int32', anon_18 : 'float32[:]', anon_19 : 'float32[:]', anon_20 : 'float32', anon_21 : 'float32', anon_22 : 'float32[:]', anon_23 : 'float32[:]', anon_24 : 'float32[:]', anon_25 : 'int32', anon_26 : 'int32[:]', anon_27 : 'bool[:]', anon_28 : 'int32') -> None:
    ...

def dggsvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float64[:,:](order=F)', anon_19 : 'int32', anon_20 : 'float64[:]', anon_21 : 'int32[:]', anon_22 : 'int32') -> None:
    ...

def sggsvd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32[:,:](order=F)', anon_17 : 'int32', anon_18 : 'float32[:,:](order=F)', anon_19 : 'int32', anon_20 : 'float32[:]', anon_21 : 'int32[:]', anon_22 : 'int32') -> None:
    ...

def sgetrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'int32') -> None:
    ...

def dgetrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'int32') -> None:
    ...

def sgetrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dgetrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sgecon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32', anon_5 : 'float32', anon_6 : 'float32[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def dgecon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64', anon_5 : 'float64', anon_6 : 'float64[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def sgerfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dgerfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def sgetri(anon_0 : 'int32', anon_1 : 'float32[:,:](order=F)', anon_2 : 'int32', anon_3 : 'int32[:]', anon_4 : 'float32[:]', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def dgetri(anon_0 : 'int32', anon_1 : 'float64[:,:](order=F)', anon_2 : 'int32', anon_3 : 'int32[:]', anon_4 : 'float64[:]', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def sgeequ(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32', anon_7 : 'float32', anon_8 : 'float32', anon_9 : 'int32') -> None:
    ...

def dgeequ(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64', anon_7 : 'float64', anon_8 : 'float64', anon_9 : 'int32') -> None:
    ...

def sgbtrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'int32') -> None:
    ...

def dgbtrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'int32') -> None:
    ...

def sgbtrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dgbtrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sgbcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'float32', anon_8 : 'float32', anon_9 : 'float32[:]', anon_10 : 'int32[:]', anon_11 : 'int32') -> None:
    ...

def dgbcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32[:]', anon_7 : 'float64', anon_8 : 'float64', anon_9 : 'float64[:]', anon_10 : 'int32[:]', anon_11 : 'int32') -> None:
    ...

def sgbrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'float32[:]', anon_16 : 'float32[:]', anon_17 : 'int32[:]', anon_18 : 'int32') -> None:
    ...

def dgbrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'float64[:]', anon_16 : 'float64[:]', anon_17 : 'int32[:]', anon_18 : 'int32') -> None:
    ...

def sgbequ(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'float32', anon_9 : 'float32', anon_10 : 'float32', anon_11 : 'int32') -> None:
    ...

def dgbequ(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'float64', anon_9 : 'float64', anon_10 : 'float64', anon_11 : 'int32') -> None:
    ...

def sgttrf(anon_0 : 'int32', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'int32[:]', anon_6 : 'int32') -> None:
    ...

def dgttrf(anon_0 : 'int32', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'int32[:]', anon_6 : 'int32') -> None:
    ...

def sgttrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dgttrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sgtcon(anon_0 : 'str', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'int32[:]', anon_6 : 'float32', anon_7 : 'float32', anon_8 : 'float32[:]', anon_9 : 'int32[:]', anon_10 : 'int32') -> None:
    ...

def dgtcon(anon_0 : 'str', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'int32[:]', anon_6 : 'float64', anon_7 : 'float64', anon_8 : 'float64[:]', anon_9 : 'int32[:]', anon_10 : 'int32') -> None:
    ...

def sgtrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'int32[:]', anon_11 : 'float32[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float32[:]', anon_16 : 'float32[:]', anon_17 : 'float32[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def dgtrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'int32[:]', anon_11 : 'float64[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float64[:]', anon_16 : 'float64[:]', anon_17 : 'float64[:]', anon_18 : 'int32[:]', anon_19 : 'int32') -> None:
    ...

def spotrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32') -> None:
    ...

def dpotrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32') -> None:
    ...

def spotrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dpotrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def spocon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32', anon_5 : 'float32', anon_6 : 'float32[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def dpocon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64', anon_5 : 'float64', anon_6 : 'float64[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def sporfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'int32[:]', anon_15 : 'int32') -> None:
    ...

def dporfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'int32[:]', anon_15 : 'int32') -> None:
    ...

def spotri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32') -> None:
    ...

def dpotri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32') -> None:
    ...

def spoequ(anon_0 : 'int32', anon_1 : 'float32[:,:](order=F)', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32', anon_5 : 'float32', anon_6 : 'int32') -> None:
    ...

def dpoequ(anon_0 : 'int32', anon_1 : 'float64[:,:](order=F)', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64', anon_5 : 'float64', anon_6 : 'int32') -> None:
    ...

def spptrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'int32') -> None:
    ...

def dpptrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'int32') -> None:
    ...

def spptrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def dpptrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def sppcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32', anon_4 : 'float32', anon_5 : 'float32[:]', anon_6 : 'int32[:]', anon_7 : 'int32') -> None:
    ...

def dppcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64', anon_4 : 'float64', anon_5 : 'float64[:]', anon_6 : 'int32[:]', anon_7 : 'int32') -> None:
    ...

def spprfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def dpprfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def spptri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'int32') -> None:
    ...

def dpptri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'int32') -> None:
    ...

def sppequ(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32', anon_5 : 'float32', anon_6 : 'int32') -> None:
    ...

def dppequ(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64', anon_5 : 'float64', anon_6 : 'int32') -> None:
    ...

def spbtrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def dpbtrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def spbtrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dpbtrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def spbcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'float32[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def dpbcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'float64[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def spbrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dpbrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def spbequ(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32', anon_7 : 'float32', anon_8 : 'int32') -> None:
    ...

def dpbequ(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64', anon_7 : 'float64', anon_8 : 'int32') -> None:
    ...

def spttrf(anon_0 : 'int32', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'int32') -> None:
    ...

def dpttrf(anon_0 : 'int32', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'int32') -> None:
    ...

def spttrs(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def dpttrs(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32') -> None:
    ...

def sptcon(anon_0 : 'int32', anon_1 : 'float32[:]', anon_2 : 'float32[:]', anon_3 : 'float32', anon_4 : 'float32', anon_5 : 'float32[:]', anon_6 : 'int32') -> None:
    ...

def dptcon(anon_0 : 'int32', anon_1 : 'float64[:]', anon_2 : 'float64[:]', anon_3 : 'float64', anon_4 : 'float64', anon_5 : 'float64[:]', anon_6 : 'int32') -> None:
    ...

def sptrfs(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'int32') -> None:
    ...

def dptrfs(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'int32') -> None:
    ...

def ssytrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dsytrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def ssytrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dsytrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def ssycon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float32', anon_6 : 'float32', anon_7 : 'float32[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def dsycon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float64', anon_6 : 'float64', anon_7 : 'float64[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def ssyrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dsyrfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def ssytri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float32[:]', anon_6 : 'int32') -> None:
    ...

def dsytri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float64[:]', anon_6 : 'int32') -> None:
    ...

def ssptrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'int32[:]', anon_4 : 'int32') -> None:
    ...

def dsptrf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'int32[:]', anon_4 : 'int32') -> None:
    ...

def ssptrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'int32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dsptrs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'int32[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sspcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'int32[:]', anon_4 : 'float32', anon_5 : 'float32', anon_6 : 'float32[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def dspcon(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'int32[:]', anon_4 : 'float64', anon_5 : 'float64', anon_6 : 'float64[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def ssprfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'int32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'int32[:]', anon_14 : 'int32') -> None:
    ...

def dsprfs(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'int32[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'int32[:]', anon_14 : 'int32') -> None:
    ...

def ssptri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:]', anon_3 : 'int32[:]', anon_4 : 'float32[:]', anon_5 : 'int32') -> None:
    ...

def dsptri(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:]', anon_3 : 'int32[:]', anon_4 : 'float64[:]', anon_5 : 'int32') -> None:
    ...

def strtrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def dtrtrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def strcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32', anon_7 : 'float32[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def dtrcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64', anon_7 : 'float64[:]', anon_8 : 'int32[:]', anon_9 : 'int32') -> None:
    ...

def strrfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'int32[:]', anon_15 : 'int32') -> None:
    ...

def dtrrfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'int32[:]', anon_15 : 'int32') -> None:
    ...

def strtri(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def dtrtri(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def stptrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dtptrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def stpcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32', anon_6 : 'float32[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def dtpcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64', anon_6 : 'float64[:]', anon_7 : 'int32[:]', anon_8 : 'int32') -> None:
    ...

def stprfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'int32[:]', anon_14 : 'int32') -> None:
    ...

def dtprfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'int32[:]', anon_14 : 'int32') -> None:
    ...

def stptri(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'int32') -> None:
    ...

def dtptri(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'int32') -> None:
    ...

def stbtrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32') -> None:
    ...

def dtbtrs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32') -> None:
    ...

def stbcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32', anon_8 : 'float32[:]', anon_9 : 'int32[:]', anon_10 : 'int32') -> None:
    ...

def dtbcon(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64', anon_8 : 'float64[:]', anon_9 : 'int32[:]', anon_10 : 'int32') -> None:
    ...

def stbrfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dtbrfs(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:]', anon_15 : 'int32[:]', anon_16 : 'int32') -> None:
    ...

def dgebrd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def sgebrd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dgeqp3(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sgeqp3(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32[:]', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dgeqrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgeqrf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgelqf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgelqf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgeqlf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgeqlf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgerqf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sgerqf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dorgbr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'float64[:]', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def sorgbr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'float32[:]', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def dormbr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sormbr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dorgqr(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sorgqr(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dormqr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sormqr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dormlq(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sormlq(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dorgql(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sorgql(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dormql(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sormql(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dormrq(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def sormrq(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'int32', anon_12 : 'int32') -> None:
    ...

def dormrz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sormrz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dorgrq(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sorgrq(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dorglq(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sorglq(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dbdsqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float64[:]', anon_14 : 'int32') -> None:
    ...

def sbdsqr(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:,:](order=F)', anon_12 : 'int32', anon_13 : 'float32[:]', anon_14 : 'int32') -> None:
    ...

def dbdsdc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:]', anon_10 : 'int32[:]', anon_11 : 'float64[:]', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def sbdsdc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:]', anon_10 : 'int32[:]', anon_11 : 'float32[:]', anon_12 : 'int32[:]', anon_13 : 'int32') -> None:
    ...

def dgbbrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64[:]', anon_17 : 'int32') -> None:
    ...

def sgbbrd(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32[:]', anon_17 : 'int32') -> None:
    ...

def dtzrzf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:]', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def stzrzf(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:]', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dgehrd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sgehrd(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dgebal(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:]', anon_7 : 'int32') -> None:
    ...

def sgebal(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:]', anon_7 : 'int32') -> None:
    ...

def dgebak(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def sgebak(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'int32') -> None:
    ...

def dorghr(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def sorghr(anon_0 : 'int32', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'int32') -> None:
    ...

def dormhr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sormhr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dhseqr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def shseqr(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dhsein(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'bool[:]', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:]', anon_8 : 'float64[:]', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:,:](order=F)', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'int32', anon_15 : 'float64[:]', anon_16 : 'int32[:]', anon_17 : 'int32[:]', anon_18 : 'int32') -> None:
    ...

def shsein(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'bool[:]', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:]', anon_8 : 'float32[:]', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:,:](order=F)', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'int32', anon_15 : 'float32[:]', anon_16 : 'int32[:]', anon_17 : 'int32[:]', anon_18 : 'int32') -> None:
    ...

def dtrevc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'int32') -> None:
    ...

def strevc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'int32') -> None:
    ...

def dtrexc(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'int32') -> None:
    ...

def strexc(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'int32') -> None:
    ...

def dtrsyl(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'int32') -> None:
    ...

def strsyl(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'int32') -> None:
    ...

def dtrsna(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def strsna(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'int32[:]', anon_17 : 'int32') -> None:
    ...

def dtrsen(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'int32', anon_11 : 'float64', anon_12 : 'float64', anon_13 : 'float64[:]', anon_14 : 'int32', anon_15 : 'int32[:]', anon_16 : 'int32', anon_17 : 'int32') -> None:
    ...

def strsen(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'int32', anon_11 : 'float32', anon_12 : 'float32', anon_13 : 'float32[:]', anon_14 : 'int32', anon_15 : 'int32[:]', anon_16 : 'int32', anon_17 : 'int32') -> None:
    ...

def ssygst(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def dsygst(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'int32') -> None:
    ...

def sspgst(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float32[:]', anon_4 : 'float32[:]', anon_5 : 'int32') -> None:
    ...

def dspgst(anon_0 : 'int32', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'float64[:]', anon_4 : 'float64[:]', anon_5 : 'int32') -> None:
    ...

def spbstf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def dpbstf(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'int32') -> None:
    ...

def ssbgst(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'int32') -> None:
    ...

def dsbgst(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'int32') -> None:
    ...

def sgghrd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:,:](order=F)', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def dgghrd(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:,:](order=F)', anon_12 : 'int32', anon_13 : 'int32') -> None:
    ...

def sggbal(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float32[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float32[:]', anon_9 : 'float32[:]', anon_10 : 'float32[:]', anon_11 : 'int32') -> None:
    ...

def dggbal(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'float64[:,:](order=F)', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'int32', anon_7 : 'int32', anon_8 : 'float64[:]', anon_9 : 'float64[:]', anon_10 : 'float64[:]', anon_11 : 'int32') -> None:
    ...

def sggbak(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float32[:]', anon_6 : 'float32[:]', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def dggbak(anon_0 : 'str', anon_1 : 'str', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'float64[:]', anon_6 : 'float64[:]', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'int32') -> None:
    ...

def shgeqz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:]', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'float32[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float32[:,:](order=F)', anon_16 : 'int32', anon_17 : 'float32[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def dhgeqz(anon_0 : 'str', anon_1 : 'str', anon_2 : 'str', anon_3 : 'int32', anon_4 : 'int32', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:]', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'float64[:,:](order=F)', anon_14 : 'int32', anon_15 : 'float64[:,:](order=F)', anon_16 : 'int32', anon_17 : 'float64[:]', anon_18 : 'int32', anon_19 : 'int32') -> None:
    ...

def stgevc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'float32[:]', anon_15 : 'int32') -> None:
    ...

def dtgevc(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'int32', anon_14 : 'float64[:]', anon_15 : 'int32') -> None:
    ...

def stgexc(anon_0 : 'bool', anon_1 : 'bool', anon_2 : 'int32', anon_3 : 'float32[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float32[:]', anon_14 : 'int32', anon_15 : 'int32') -> None:
    ...

def dtgexc(anon_0 : 'bool', anon_1 : 'bool', anon_2 : 'int32', anon_3 : 'float64[:,:](order=F)', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'int32', anon_12 : 'int32', anon_13 : 'float64[:]', anon_14 : 'int32', anon_15 : 'int32') -> None:
    ...

def stgsyl(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32', anon_17 : 'float32', anon_18 : 'float32[:]', anon_19 : 'int32', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def dtgsyl(anon_0 : 'str', anon_1 : 'int32', anon_2 : 'int32', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:,:](order=F)', anon_13 : 'int32', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64', anon_17 : 'float64', anon_18 : 'float64[:]', anon_19 : 'int32', anon_20 : 'int32[:]', anon_21 : 'int32') -> None:
    ...

def stgsna(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float32[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float32[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float32[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float32[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'int32', anon_15 : 'int32', anon_16 : 'float32[:]', anon_17 : 'int32', anon_18 : 'float32[:]', anon_19 : 'int32') -> None:
    ...

def dtgsna(anon_0 : 'str', anon_1 : 'str', anon_2 : 'bool[:]', anon_3 : 'int32', anon_4 : 'float64[:,:](order=F)', anon_5 : 'int32', anon_6 : 'float64[:,:](order=F)', anon_7 : 'int32', anon_8 : 'float64[:,:](order=F)', anon_9 : 'int32', anon_10 : 'float64[:,:](order=F)', anon_11 : 'int32', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'int32', anon_15 : 'int32', anon_16 : 'float64[:]', anon_17 : 'int32', anon_18 : 'float64[:]', anon_19 : 'int32') -> None:
    ...

def stgsen(anon_0 : 'int32', anon_1 : 'bool', anon_2 : 'bool', anon_3 : 'bool[:]', anon_4 : 'int32', anon_5 : 'float32[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float32[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float32[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float32[:]', anon_12 : 'float32[:]', anon_13 : 'float32[:]', anon_14 : 'float32[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float32[:,:](order=F)', anon_17 : 'int32', anon_18 : 'int32', anon_19 : 'float32', anon_20 : 'float32', anon_21 : 'float32[:]', anon_22 : 'float32[:]', anon_23 : 'int32', anon_24 : 'int32[:]', anon_25 : 'int32', anon_26 : 'int32') -> None:
    ...

def dtgsen(anon_0 : 'int32', anon_1 : 'bool', anon_2 : 'bool', anon_3 : 'bool[:]', anon_4 : 'int32', anon_5 : 'float64[:,:](order=F)', anon_6 : 'int32', anon_7 : 'float64[:,:](order=F)', anon_8 : 'int32', anon_9 : 'float64[:,:](order=F)', anon_10 : 'int32', anon_11 : 'float64[:]', anon_12 : 'float64[:]', anon_13 : 'float64[:]', anon_14 : 'float64[:,:](order=F)', anon_15 : 'int32', anon_16 : 'float64[:,:](order=F)', anon_17 : 'int32', anon_18 : 'int32', anon_19 : 'float64', anon_20 : 'float64', anon_21 : 'float64[:]', anon_22 : 'float64[:]', anon_23 : 'int32', anon_24 : 'int32[:]', anon_25 : 'int32', anon_26 : 'int32') -> None:
    ...

